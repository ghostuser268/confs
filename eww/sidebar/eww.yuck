
;;WINDOW MANAGER HYPRLAND
(deflisten window :initial "..." "./scripts/wayland/get-window-title.sh")
(deflisten workspaces :initial "[]" "./scripts/wayland/get-workspaces.sh")
(deflisten current_workspace :initial "1" "./scripts/wayland/get-active-workspace.sh")

;;MISC
;;(defvar EWW_CMD "/usr/bin/eww -c $HOME/personal/confs/eww/sidebar/slide")

;;ICONS
(defvar ARCH_ICON 			"")
(defvar BRIGHTNESS_ICON "󰃞")
(defvar VOLUME_ICON 		"󰕾")
(defvar POWER_ICON 			"")
(defvar RESTART_ICON 		"")
(defvar SLEEP_ICON 			"")
(defvar SIGNOUT_ICON 		"")
(defvar WIFI_ICON 			"")	
(defvar NETDOWN_ICON 		"")
(defvar NETUP_ICON 			"")
(defvar USER_ICON 			"")
(defvar SHELL_ICON 			"󰨊")
(defvar KERNEL_ICON 		"󰬒")
(defvar PACKAGES_ICON 	"")
(defvar UPTIME_ICON 		"󰥔")
(defvar MEM_ICON 				"󰍛")
(defvar BAT_ICON 				"󰁹")
(defvar TEMP_ICON 			"󰔄")
(defvar DISK_ICON 			"󰋊")
(defvar BROWSER_ICON 		"")
(defvar TMUX_ICON 			"")
(defvar STATUS_ICON 		"")
(defvar GITHUB_ICON 		"")
(defvar PROXY_ICON 			"󰒃")
(defvar TURBO_ICON 			"󱐋")
(defvar FOLDER_ICON 		"")

;;SWITCHES
(defvar p false)
(defvar v false)
(defvar b false)
(defvar c false)
(defvar s false)

;;CARDINFO
(defvar CARDIMAGE "./images/cat.jpg")
(deflisten NAME 	:initial 	 "" "whoami")
(deflisten SHELL  :initial   "" "echo $SHELL") 
(deflisten KERNEL 	:initial   ""  "uname -a | awk '{print $3}'")
(defpoll UPTIME 	:interval "60s" "uptime | awk '{print $3}' | awk -F, '{print $1}'")
(defpoll PACKAGES :interval "8600s" "pacman -Qq | wc -l")

;;FOLDERS
(defvar DOWNLOADS 		"st -e nnn -deoP p ~/downloads &")
(defvar PICTURES 			"st -e nnn -deoP p ~/pictures &")
(defvar CONFIGS 			"st -e nnn -deoP p ~/.config &")
(defvar DEVELOPMENT 	"st -e nnn -deoP p ~/personal/development &")
(defvar PERSONAL 			"st -e nnn -deoP p ~/personal &")

;;SHORTCUTS
(defvar BROWSER "firefox &")
(defvar GITHUB  "firefox https://github.com/ghostuser268?tab=repositories &")
(defvar STATUS  "st -e btop &")
(defvar TMUX 		"st -e tmux &")
(defvar VPN 		"outline-client &")
(defvar TURBO		"./scripts/turbo.sh")

(defvar SHUTDOWN 	"systemctl poweroff")
(defvar RESTART 	"systemctl reboot")
(defvar SLEEP 		"systemctl suspend")
(defvar SIGNOUT 	"pkill Hyprland")

;;STATUSES
(defvar VOLUME "if [[ '{}' == 'up' ]];then amixer -qc 1 set Master 10%+ unmute;else amixer -qc 1 set Master 10%- unmute;fi")
(defvar VOL_LEFT_CLICK  "./scripts/volume.sh --config ~/personal/confs/eww/sidebar")
(defvar VOL_UPDATE "amixer -qc 1 set Master {}%")
(defvar VOL_RIGHT_CLICK  "st -e alsamixer&")
(defvar NET_RIGHT_CLICK "st -e nmtui&")
(defvar BRI_UPDATE "xbacklight -set {}")
(defpoll WIFI_NAME :interval "60s" "nmcli | awk '/wlp1s0/{print $4}'")

;;(defpoll DISKUSAGE_OLD 	:interval "60s" `df -h | awk ' /nvme0n1p9/  {printf $3"  |  "$2}'`)
;;(defpoll DISKUSAGE 	:interval "60s" `df -h | awk ' /nvme0n1p9/  {printf $3}'`)
(defpoll DISKPERC 	:interval "60s" "./scripts/stats.sh disk_perc")
(defpoll MEMORY 	:interval "1s"  "./scripts/stats.sh memory single"	)
(defpoll BATTERY 	:interval "60s" "./scripts/stats.sh battery"				)
;;(defpoll NET 			:interval "5s"  "./scripts/net.sh"									)
;;(defpoll NETDOWN 	:interval "5s"  "./scripts/net.sh down"						)
;;(defpoll NETPRE		:interval "5s"  "./scripts/net.sh pre"							)

(defpoll CURRENT_VOL :interval "1s"  "amixer -c 1 sget Master | awk '/Mono/ {printf $4}' | tr -d '\[%\]'" )
(defpoll CURRENT_BRI 	:interval "1s"  "xbacklight -get" )
(defpoll CPU 			:interval "1s"  "./scripts/stats.sh cpu_temp"			)
(defpoll GPU 			:interval "1s"  "./scripts/stats.sh gpu_temp"			)

;;TIME
(defpoll DAY 			:interval "86400s" `date +%d`)
(defpoll MONTH 		:interval "86400s" `date +%m`)
(defpoll YEAR 		:interval "86400s" `date +%y`)

(defpoll DATE 		:interval "86400s" `date +%M`)
(defpoll TIME 		:interval "1s" `date +%X`)
(defpoll HOUR 		:interval "1s" `date +%H`)
(defpoll MINUTES 	:interval "1s" `date +%M`)

(defwindow bar :monitor 0 :geometry (geometry :x "0%" :y "0%" :width "30px" :height "100%" :anchor "left center") :stacking "fg" :windowtype "dock" :exclusive true :wm-ignore false (bar))
(defwindow slide :monitor 0 :geometry (geometry :x "0px" :y "0%" :width "300px" :height "100%" :anchor "left center") :stacking "fg" :windowtype "dock" :exclusive true :wm-ignore false (slide_menu))

(defwidget bar []
 (centerbox :orientation "v" 
  (box :class "segment-top" :valign "start" (top))
   (box :valign "center" :class "middle" (middle))
    (box :valign "end" :class "bottom" (bottom))
 )
)

(defwidget top [] 
 (eventbox :onscroll "./scripts/wayland/change-active-workspace.sh {} ${current_workspace}" :class "workspaces-widget"
  (box  :class "windows" :orientation "v" :space-evenly false :class "top"
	 (button :class "logo" :onclick {s == false ? "${EWW_CMD} open slide; ${EWW_CMD} update s=true" : "${EWW_CMD} close slide; ${EWW_CMD} update s=false" }  "${ARCH_ICON}" )
    (box :orientation "v" (for workspace in workspaces
     (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}" 
      (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
       (label :text "${workspace.id}")
)))))))
(defwidget middle [] (box (label :angle 90 :show_truncated true :limit-width 40 :text "${window}")))


(defwidget bottom [] 
 (box :orientation "v" :space-evenly false :class "bottom" 
  (box :class "mutable_status" :orientation "v" :space-evenly false
	 (box 
	  (eventbox :onhover "${EWW_CMD} update v=true" :onhoverlost "${EWW_CMD} update v=false"
	   (box :orientation "v"  :space-evenly false
			(revealer :transition "slideup" :reveal v :duration "550ms"
			 (scale :orientation "v" :tooltip "${CURRENT_VOL}" :min 0 :max 100 :flipped true :value "${CURRENT_VOL}" :onchange "${VOL_UPDATE}"
))
			(button :class "slider_button" :class "icon" :onclick "${VOL_LEFT_CLICK}"  :onrightclick "${VOL_RIGHT_CLICK}" :tooltip "${CURRENT_VOL}" "${VOLUME_ICON}"  ) 
)))
			(box 
			 (eventbox :onhover "${EWW_CMD} update b=true" :onhoverlost "${EWW_CMD} update b=false"
			  (box :orientation "v" :space-evenly false
				 (revealer :transition "slideup" :reveal b :duration "550ms"
				  (scale :orientation "v" :tooltip "${CURRENT_BRI}" :min 0 :max 101 :flipped true :value "${CURRENT_BRI}" :onchange "${BRI_UPDATE}"
))
				 (label :text "${BRIGHTNESS_ICON}" :class "icon" :tooltip "${CURRENT_BRI}")
))))
		(box :class "immutable_status" :orientation "v"
		 (label :text "${MEM_ICON}" :class "icon" :tooltip "${MEMORY}")

	   (label :text "${BAT_ICON}" :class "icon" :tooltip "${BATTERY}%")
		 (button  :class "icon" :onrightclick "${NET_RIGHT_CLICK}" :tooltip "Connected to ${WIFI_NAME} : ${round(EWW_NET['wlp1s0'].NET_DOWN / 1000000, 2)}Mb" "${WIFI_ICON}" )
		 (label :text "${TEMP_ICON}" :class "icon" :tooltip "C:${CPU}% - G:${GPU}%")
		 (label :text "${DISK_ICON}" :class "icon" :tooltip "${DISKPERC}%")
		)
	  (box :class "power" :orientation "v"
	   (eventbox :onhover "${EWW_CMD} update p=true" :onhoverlost "${EWW_CMD} update p=false"
			(box :orientation "v" :space-evenly false
			 (revealer :transition "slideup" :reveal p :duration "500ms" 
			  (box :class "power" :orientation "v" :space-evenly true 
				 (button :onclick "${SHUTDOWN}"  "${POWER_ICON}")
				 (button :onclick "${RESTART}"   "${RESTART_ICON}")
				 (button :onclick "${SLEEP}"     "${SLEEP_ICON}")
				 (button :onclick "${SIGNOUT}"   "${SIGNOUT_ICON}")
))
			 (label :text "${POWER_ICON}" :class "icon")
))) 
	 (box :class "time" :orientation "v" :tooltip "${DATE} - ${TIME}"
	  (button :onclick {c == false ? "${EWW_CMD} open calendar; ${EWW_CMD} update c=true" : "${EWW_CMD} close calendar; ${EWW_CMD} update c=false" } "${HOUR}")
	   (button :onclick {c == false ? "${EWW_CMD} open calendar; ${EWW_CMD} update c=true" : "${EWW_CMD} close calendar; ${EWW_CMD} update c=false" } "${MINUTES}")
)))


(defwindow calendar :monitor 0 :geometry (geometry :x "1px" :y "84%" :width "12%" :height "15%") (cal))
(defwidget cal[] (box :class "cal-box" :orientation "v" (box :class "cal-inner-box" (calendar :class "cal" :day calendar_day :month calendar_month :year calendar_year))))
(defpoll calendar_day :interval "10h" "date '+%d'")
(defpoll calendar_month :interval "10h" "scripts/calendar")
(defpoll calendar_year :interval "10h" "date '+%Y'")

(defwidget slide_menu[] 
 (centerbox :orientation "v" :space-evenly false
  (box :class "slide_top" :valign "start" (slide_top))
  (box :class "slide_middle" :valign "center" (slide_middle))
  (box :class "slide_bottom" :valign "end" (slide_bottom))
))

(defwidget slide_top[] 
 (box :class "slide_top" :orientation "v"
  ;;(box :class "info_card_image" :style "background-image: url('${CARDIMAGE}')")
	 (box :orientation "h" :class "info" 
	  (box :orientation "v" :space-evenly false :valign "center" :halign "center"
	   ( box :orientation "h" :space-evenly false ( label :text "${USER_ICON}" ) ( label :text "${NAME}"  :valign "center" ))
	   ( box :orientation "h" :space-evenly false ( label :text "${SHELL_ICON}" ) ( label :text "${SHELL}"))
	   ( box :orientation "h" :space-evenly false ( label :text "${KERNEL_ICON}" ) ( label :text "${KERNEL}"))
	  )
	  (box :orientation "v" :space-evenly false :valign "center" :halign "center"
	   ( box :orientation "h" :space-evenly false ( label :text "${PACKAGES_ICON}" ) ( label :text "${PACKAGES}" ))
	   ( box :orientation "h" :space-evenly false ( label :text "${UPTIME_ICON}" ) ( label :text "${UPTIME}" ))
))))

(defwidget slide_middle[] 
 (box :orientation "v" :space-evenly false :class "slide_middle"
  (box :class "shortcuts" :orientation "v" 
	 (box 
	  (button :onclick "${BROWSER}"	"${BROWSER_ICON}") 
	  (button :onclick "${TMUX}"			"${TMUX_ICON}") 
	  (button :onclick "${STATUS}"		"${STATUS_ICON}") 
	 )
	 (box
	  (button :onclick "${GITHUB}"		"${GITHUB_ICON}")
	  (button :onclick "${VPN}"			"${PROXY_ICON}") 
	  (button :onclick "${TURBO}"		"${TURBO_ICON}") 
	 )
 )
 (box :class "fm_shortcuts"  :orientation "h"
  (box :orientation "v"  :space-evenly false 
	 (box :orientation "h" :space-evenly false
	  (label :text "${FOLDER_ICON}")
	   (button :onclick "${PICTURES}" "~/pictures")
	 )
	 (box :orientation "h" :space-evenly false					
	  (label :text "${FOLDER_ICON}")
	  (button :onclick "#{CONFIGS}" "~/.config" )
	 )
	 (box :orientation "h" :space-evenly false				
	  (label :text "${ FOLDER_ICON }")
	  (button :onclick "${DOWNLOADS}" "~/dowloads" )
	 )
  )	
 (box :orientation "v" :space-evenly false 
  (box :orientation "h" :space-evenly false			
	 (label :text "${FOLDER_ICON}")
	  (button :onclick "${DEVELOPMENT}" "~/development" )
  )
  (box :orientation "h" :space-evenly false
	 (label :text "${FOLDER_ICON}")
	  (button :onclick "${PERSONAL}" "~/personal" )
)))))

(defwidget slide_bottom[]
 (box :orientation "v" :space-evenly false :class "slide_bottom"
  (box :class "status" :orientation "v" :space-evenly false
  (box :class "mutable" :space-evenly false :orientation "v"
  (box :space-evenly false :class "slider"
   (label :text "${VOLUME_ICON}" :xalign 0.5 :yalign 0.5 :style "font-size: 24px")
   (scale :orientation "h" :tooltip "${CURRENT_VOL}" :min 0 :max 100 :flipped false :value "${CURRENT_VOL}" :onchange "${VOL_UPDATE}")
  )
  (box :space-evenly false :class "slider"
	 (label :text "${BRIGHTNESS_ICON}" :xalign 0.5 :yalign 0.5 :style "font-size: 24px")
	 (scale :orientation "h" :tooltip "${CURRENT_BRI}" :min 0 :max 101 :flipped false :value "${CURRENT_BRI}" :onchange "${BRI_UPDATE}"))
  )
  (box :class "immutable" :orientation "v"
	 (box :orientation "v"
	  (box :class "net" (label :text "${NETDOWN_ICON} ${round(EWW_NET['wlp1s0'].NET_DOWN / 1000000, 2)}Mb  ${NETUP_ICON} ${round(EWW_NET['wlp1s0'].NET_UP/ 1000000, 2)}Mb"))
	   (box 
			(box :space-evenly false :valign "center" :halign "center"(label :style "font-size:14px"  :text "C  ") (label :text "${CPU}"))
			(box :space-evenly false :valign "center" :halign "center"(label :style "font-size:14px"  :text "G  ") (label  :text "${GPU}"))
	   )
	  (box :space-evenly false :valign "center" :halign "center" (label :style "font-size:24px" :text "${MEM_ICON} ")(label :text "${MEMORY}"))
	  (box 
	   (circular-progress  :value "${DISKPERC}" :thickness 4 
	   (box :class "circlular_module"
	    (label :text "${DISK_ICON}" :tooltip "${DISKPERC}%")
	   )
	 )
   (circular-progress  :value "${BATTERY}" :thickness 4 
	 (box :class "circlular_module"
	 (label :text "${BAT_ICON}" :tooltip "${BATTERY}%")
))))))
 (box :orientation "h" :class "date"
  (label :text "${DAY}" :valign "center")
	 (label :text "|")
	 (label :text "${MONTH}" :valign "center")
	 (label :text "|")
	 (label :text "${YEAR}" :valign "center")
 )
 (box :class "slider_power"
  (button :onclick "${SHUTDOWN}"  "${POWER_ICON}")
  (button :onclick "${RESTART}"   "${RESTART_ICON}")
  (button :onclick "${SLEEP}"     "${SLEEP_ICON}")
  (button :onclick "${SIGNOUT}"   "${SIGNOUT_ICON}")
 )))
